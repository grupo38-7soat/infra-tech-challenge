name: Create EKS Cluster

on:
  workflow_dispatch: # Permite executar manualmente o workflow

jobs:
  create-cluster:
    name: Create EKS Cluster
    runs-on: ubuntu-latest

    steps:
      # Etapa 1: Configurar credenciais da AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Etapa 2: Instalar eksctl
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version

      # Etapa 3: Extrair o nome do repositório
      - name: Extract repository name
        id: repo-name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      # Etapa 4: Criar o cluster EKS
      - name: Create EKS Cluster
        run: |
          eksctl create cluster \
            --name $REPO_NAME \
            --region ${{ secrets.AWS_REGION }} \
            --version 1.27 \
            --nodegroup-name app-nodes \
            --node-labels "role=app" \
            --node-type t2.medium \
            --nodes 1 \
            --nodes-min 1 \
            --nodes-max 2

#      # Etapa 5: Criar o grupo de nós para o PostgreSQL
#      - name: Create Node Group for PostgreSQL
#        run: |
#          eksctl create nodegroup \
#            --cluster $REPO_NAME \
#            --name db-nodes \
#            --node-labels "role=database" \
#            --node-type t2.micro \
#            --nodes 1 \
#            --nodes-min 1 \
#            --nodes-max 2
#
#      # Etapa 6: Criar o grupo de nós para RabbitMQ
#      - name: Create Node Group for RabbitMQ
#        run: |
#          eksctl create nodegroup \
#            --cluster $REPO_NAME \
#            --name mq-nodes \
#            --node-labels "role=rabbitmq" \
#            --node-type t2.micro \
#            --nodes 1 \
#            --nodes-min 1 \
#            --nodes-max 2

      # Etapa 7: Verificar o status do cluster
      - name: Verify Cluster Status
        run: eksctl get cluster --region ${{ secrets.AWS_REGION }}